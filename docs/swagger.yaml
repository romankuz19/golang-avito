basePath: /
definitions:
  avitoproj.UserHistory:
    properties:
      operationDate:
        type: string
      operationType:
        type: string
      sectionId:
        type: integer
      sectionName:
        type: string
      userId:
        type: integer
    type: object
  handler.AddDeleteSections:
    properties:
      sectionsAdd:
        items:
          type: string
        type: array
      sectionsDelete:
        items:
          type: string
        type: array
    type: object
  handler.HistoryRequestBody:
    properties:
      date:
        type: string
    type: object
  handler.SectionRequestBody:
    properties:
      slug:
        type: string
    type: object
  handler.UserRequestBody:
    properties:
      name:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for AvitoProj Application
  title: Avito Proj API
  version: "1.0"
paths:
  /api/sections:
    delete:
      consumes:
      - application/json
      description: delete section
      operationId: delete-section
      parameters:
      - description: section (slug) name
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/handler.SectionRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Section deleted'
          schema:
            type: integer
        "400":
          description: 'message: Failed'
          schema:
            type: integer
      summary: Delete section
      tags:
      - sections
    post:
      consumes:
      - application/json
      description: create new section
      operationId: create-section
      parameters:
      - description: section (slug) name
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/handler.SectionRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Section created'
          schema:
            type: integer
        "400":
          description: 'message: Failed'
          schema:
            type: integer
      summary: Create new section
      tags:
      - sections
  /api/sections/users/:id:
    get:
      consumes:
      - application/json
      description: get user sections
      operationId: get-user-sections
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: 'message: Failed'
          schema:
            type: integer
      summary: Get user sections
      tags:
      - sections-users
    put:
      consumes:
      - application/json
      description: add or delete user in sections
      operationId: add-user
      parameters:
      - description: list of sections to add or delete
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/handler.AddDeleteSections'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Success'
          schema:
            type: integer
        "400":
          description: 'message: Failed'
          schema:
            type: integer
      summary: Add user in section
      tags:
      - sections-users
  /api/users:
    post:
      consumes:
      - application/json
      description: create new user
      operationId: create-user
      parameters:
      - description: user's name
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/handler.UserRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: User created'
          schema:
            type: integer
        "400":
          description: 'message: Failed'
          schema:
            type: integer
      summary: Create new user
      tags:
      - users
  /api/users/:id/history:
    post:
      consumes:
      - application/json
      description: get user history
      operationId: get-user-history
      parameters:
      - description: date ('YY-MM')
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/handler.HistoryRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/avitoproj.UserHistory'
            type: array
        "400":
          description: 'message: Failed'
          schema:
            type: integer
      summary: Get user history
      tags:
      - users
swagger: "2.0"
